/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Controllers;

import DAO.ProdutoDAO;
import Mapeamento.TbProduto;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.json.JSONArray;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

/**
 *
 * @author G09
 */

@Controller
public class CadastroProdutoController {
    @RequestMapping("cadastrarProduto")
    public String retornaCadastroProd(Model model) {
        model.addAttribute("TbProduto", new TbProduto());
        return "cadastrarProduto";
    }
    
    @RequestMapping("visualizaProduto")
    public String retornaVisualiza(Model model){
        model.addAttribute("TbProduto", new TbProduto());
        return "visualizaProduto";
    }
    
    @RequestMapping("salvarProduto")
    public String salvarProduto(@RequestParam(value = "file", required = false) MultipartFile file, @ModelAttribute("TbProduto") TbProduto produto, BindingResult result, HttpServletRequest request, RedirectAttributes redirectAttributes) throws IOException {
        
        System.out.println("TESTE");
        System.out.println(produto.getTbCategoria());
        System.out.println(produto.getNomepro());
        System.out.println(produto.getPrecopro());
        System.out.println(produto.getQtdpro());
        System.out.println(produto.getDescrpro());
        System.out.println(file.getBytes());
        
        
        
        
        ProdutoDAO prodDAO = new ProdutoDAO();
        
        if (prodDAO.salvarProduto(produto)) {
            produto.setImagempro(file.getBytes());
            System.out.println("Cadastro efetuado com sucesso!");
        } 
        
        else {
            System.out.println("Cadastro não efetuado!");
        }

        return "index";
    }
    
    @RequestMapping(value = "RecuperarImagem", method = RequestMethod.GET)
    public @ResponseBody String exibirImagem(@RequestParam(value = "codigopro") int codigopro, HttpServletRequest request, HttpServletResponse response) throws IOException{
        response.setContentType("image/jpg");
        
        byte[] buffer = new byte[1024];
        int bytesread = 0;
        
        ServletOutputStream out = response.getOutputStream();
        InputStream is;
        
        ProdutoDAO produtoDAO = new ProdutoDAO();
        TbProduto produto = produtoDAO.buscarCodigo(codigopro);
        
        if(produto.getImagempro() == null){ // Se não tem foto, coloca padrão
            is = request.getSession().getServletContext().getResourceAsStream("produtoSemFoto.png");
            while((bytesread = is.read(buffer)) != -1)
                out.write(buffer, 0, bytesread);
        }
        else{ // Se tem foto
            is = new ByteArrayInputStream(produto.getImagempro());
            while((bytesread = is.read(buffer)) != -1)
                out.write(buffer, 0, bytesread);
            out.flush();
        }
        out.close();
        is.close();
        
        return "imagem";
    }
    
    @RequestMapping("grid")
    public @ResponseBody String grid(){
        List<TbProduto> listProd;
        String tmp;
        ProdutoDAO dao = new ProdutoDAO(); // Uso do DAO do Hibernate
        listProd = dao.buscarProd(); // DAO para retornar uma lista de produtos
        JSONArray json = new JSONArray(); // Variável no formato Json
        Map<String, String> data = new HashMap<String, String>();
        for(int i = 0; i < listProd.size(); i++){
            data.put("codigopro", listProd.get(i).getCodigopro() + "");
            data.put("nomepro", listProd.get(i).getNomepro() + "");
            data.put("tbCategoria", listProd.get(i).getTbCategoria().getNomecat() + "");
            data.put("precopro", listProd.get(i).getPrecopro() + "");
            data.put("qtdpro", listProd.get(i).getQtdpro() + "");
            data.put("descrpro", listProd.get(i).getDescrpro() + "");
                json.put(data); //Formata os dados no padrão do Json
        }
        
        tmp = "{\"data\":" + json.toString() + "}";
        return tmp;
    }
  
}
